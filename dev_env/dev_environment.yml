---
- name: Running the Dev Environment ansible playbook...
  hosts: localhost
  tasks:
    - name: Get repo base path
      command: git rev-parse --show-toplevel
      register: repo_base_path

    - set_fact:
        base_path: '{{repo_base_path.stdout}}/'

    - name: Install remote working packages
      become: true
      become_method: sudo
      pacman:
        name: "{{ item }}"
        state: latest
      with_items:
        - mosh

    - name: Install generic programming packages
      become: true
      become_method: sudo
      pacman:
        name: "{{ item }}"
        state: latest
      with_items:
        - make
        #  Removed for: https://hub.docker.com/r/jagregory/pandoc/
        # - pandoc  # document file conversions.
        # - texlive-core  # PDF/Latex creation from pandoc. https://wiki.archlinux.org/index.php/TeX_Live
        - ruby  # docs.travis-ci.com/user/encryption-keys/

    - name: Install system-wide python packages
      become: true
      become_method: sudo
      pip:
        name: "{{item}}"
        state: latest
      with_items:
        - pep8
        - flake8
        - jedi
        - virtualenvwrapper
        - ipython
        - ipdb
      tags:
        - virtualenvs

    - name: Install C++ packages
      become: true
      become_method: sudo
      pacman:
        name: "{{ item }}"
        state: latest
      with_items:
        - cmake
        - gcc
        # - gcc-multilib  # build 32/64-bit packages. Conflicts with `gcc`.
        - gdb
        - clang

    - name: Install C# packages
      become: true
      become_method: sudo
      pacman:
        name: "{{ item }}"
        state: latest
      with_items:
        - mono  # https://wiki.archlinux.org/index.php/Mono
        - mono-tools  # docs/testing
        - dotnet-sdk  # https://wiki.archlinux.org/index.php/.NET_Core
        - dotnet-runtime

    - name: Install random stuff I am toying with, but are not core packages
      become: true
      become_method: sudo
      pacman:
        name: "{{ item }}"
        state: latest
      with_items:
        - rabbitmq
        - docker-compose

    - name: Install my github repos...
      # Need to out of band, sort out the ssh keys to access github.
      git:
        repo: "{{item.repo}}"
        dest: "{{item.dest}}"
        accept_hostkey: yes
        update: no
      with_items:
        - {repo: 'git@github.com:jackson15j/presentations.git', dest:
          '~/github_repos/presentations/'}
        - {repo: 'git@github.com:jackson15j/dot_emacs.git', dest:
          '~/github_repos/dot_emacs/'}
        - {repo: 'git@github.com:jackson15j/dot_files.git', dest:
          '~/github_repos/dot_files/'}
        - {repo: 'git@github.com:jackson15j/jackson15j.github.io.git', dest:
          '~/github_repos/jackson15j.github.io/'}
        - {repo: 'git@github.com:jackson15j/cpp_random_projects_for_learning.git', dest:
          '~/github_repos/cpp_random_projects_for_learning/'}
        - {repo: 'git@github.com:jackson15j/unittest_helloworld.git', dest:
          '~/github_repos/unittest_helloworld/'}
        - {repo: 'git@github.com:jackson15j/android_test.git', dest:
          '~/github_repos/android_test/'}
      tags:
        - repos

    - name: Set my github repos to have my personal github author details...
      shell: |
        for x in ~/github_repos/*;
        do [ -d $x ] &&
        cd "$x" &&
        git config user.name "Craig Astill" &&
        git config user.email "craig.astill@gmail.com";
        done;
      tags:
        - repos

    - name: Install Github repos I have/not forked...
      git:
        repo: "{{item.repo}}"
        dest: "{{item.dest}}"
        accept_hostkey: yes
        update: no
      with_items:
        - {
        repo: 'git@github.com:emacsmirror/excorporate.git',
        dest: '~/github_forks/excorporate/'}
        - {
        repo: 'git@github.com:mopemope/meghanada-server.git',
        dest: '~/github_forks/meghanada-server/'}
        - {
        repo: 'git@github.com:death/reddit-mode.git',
        dest: '~/github_forks/reddit-mode/'}
        - {
        repo: 'git@github.com:vermiculus/magithub.git',
        dest: '~/github_forks/magithub/'}
        - {
        repo: 'git@github.com:volumio/volumio-plugins.git',
        dest: '~/github_forks/volumio-plugins/'}
        - {
        repo: 'git@github.com:Koutch/Cinnamon-sound-with-apps-volume.git',
        dest: '~/github_forks/Cinnamon-sound-with-apps-volume/'}
        - {
        repo: 'git@github.com:cscutcher/docker-tox-pyenv-runner.git',
        dest: '~/github_forks/docker-tox-pyenv-runner/'}
        - {
        repo: 'git@github.com:GoldenCheetah/GoldenCheetah.git',
        dest: '~/github_forks/GoldenCheetah/'}
      tags:
        - repos
        - forks

    - name: Programmatically add what my personal fork would be as a remote "me"...
      shell: |
        for x in ~/github_forks/*;
        do [ -d $x ] &&
        cd "$x" &&
        slug=`git remote -v | grep origin | grep push | grep -o '/.*.git'` &&
        my_fork="git@github.com:jackson15j$slug" &&
        echo "-- Adding the remote: $my_fork, in: $x ..." &&
        git remote add me my_fork;
        # `git remote add` will fail on existing remotes, so using the
        # following `true` command to _"reset"_ the exit code.
        true;
        done;
      tags:
        - repos
        - forks

    - name: Set my github forks to have my personal github author details...
      shell: |
        for x in ~/github_forks/*;
        do [ -d $x ] &&
        cd "$x" &&
        git config user.name "Craig Astill" &&
        git config user.email "craig.astill@gmail.com";
        done;
      tags:
        - repos
        - forks

    - name: Install Travis CLI for the occassional CI task...
      # docs.travis-ci.com/user/encryption-keys/
      gem:
        name: travis
        state: latest

# FIXME: this is broken because I can't access folders below where ansible is
# called.
#
# To fix it, I need to do git submodules which are created in the ansible
# expected directory structure, so in a `roles` folder.
# - include: "~/github_repos/dot_emacs/ansible/main.yml"
