###############################################################################
#  Customize BASH PS1 prompt to show current GIT repository and branch.
#  by Mike Stewart - http://MediaDoneRight.com
#
#  SETUP CONSTANTS
#  Bunch-o-predefined colors.  Makes reading code easier than escape sequences.
#  I don't remember where I found this.  o_O
#
# Reset
Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White

# Bold
BBlack="\[\033[1;30m\]"       # Black
BRed="\[\033[1;31m\]"         # Red
BGreen="\[\033[1;32m\]"       # Green
BYellow="\[\033[1;33m\]"      # Yellow
BBlue="\[\033[1;34m\]"        # Blue
BPurple="\[\033[1;35m\]"      # Purple
BCyan="\[\033[1;36m\]"        # Cyan
BWhite="\[\033[1;37m\]"       # White

# Commenting out unused colours
# # Underline
# UBlack="\[\033[4;30m\]"       # Black
# URed="\[\033[4;31m\]"         # Red
# UGreen="\[\033[4;32m\]"       # Green
# UYellow="\[\033[4;33m\]"      # Yellow
# UBlue="\[\033[4;34m\]"        # Blue
# UPurple="\[\033[4;35m\]"      # Purple
# UCyan="\[\033[4;36m\]"        # Cyan
# UWhite="\[\033[4;37m\]"       # White

# # Background
# On_Black="\[\033[40m\]"       # Black
# On_Red="\[\033[41m\]"         # Red
# On_Green="\[\033[42m\]"       # Green
# On_Yellow="\[\033[43m\]"      # Yellow
# On_Blue="\[\033[44m\]"        # Blue
# On_Purple="\[\033[45m\]"      # Purple
# On_Cyan="\[\033[46m\]"        # Cyan
# On_White="\[\033[47m\]"       # White

# # High Intensty
# IBlack="\[\033[0;90m\]"       # Black
# IRed="\[\033[0;91m\]"         # Red
# IGreen="\[\033[0;92m\]"       # Green
# IYellow="\[\033[0;93m\]"      # Yellow
# IBlue="\[\033[0;94m\]"        # Blue
# IPurple="\[\033[0;95m\]"      # Purple
# ICyan="\[\033[0;96m\]"        # Cyan
# IWhite="\[\033[0;97m\]"       # White

# # Bold High Intensty
# BIBlack="\[\033[1;90m\]"      # Black
# BIRed="\[\033[1;91m\]"        # Red
# BIGreen="\[\033[1;92m\]"      # Green
# BIYellow="\[\033[1;93m\]"     # Yellow
# BIBlue="\[\033[1;94m\]"       # Blue
# BIPurple="\[\033[1;95m\]"     # Purple
# BICyan="\[\033[1;96m\]"       # Cyan
# BIWhite="\[\033[1;97m\]"      # White

# # High Intensty backgrounds
# On_IBlack="\[\033[0;100m\]"   # Black
# On_IRed="\[\033[0;101m\]"     # Red
# On_IGreen="\[\033[0;102m\]"   # Green
# On_IYellow="\[\033[0;103m\]"  # Yellow
# On_IBlue="\[\033[0;104m\]"    # Blue
# On_IPurple="\[\033[10;95m\]"  # Purple
# On_ICyan="\[\033[0;106m\]"    # Cyan
# On_IWhite="\[\033[0;107m\]"   # White

# Various variables you might want for your PS1 prompt instead
Time12h="\T"
Time12a="\@"
PathShort="\w"
PathFull="\W"
NewLine="\n"
Jobs="\j"
Username="\u"
Hostname="\h"
#DateTime="$Blue\D{%Y.%m.%d}-\A$Color_Off"
#DateTime="$Blue\A-\D{%d.%m.%Y}$Color_Off"
DateTime="$Blue\A-\D{%d.%b}$Color_Off"
# DateTime="\D{%m.%d} \A"
# DateTime="$Blue\D{%d%b}$Cyan\A$Color_Off"

#TODO: fix up for virtualenv!! need to pull out 'VIRTUAL_ENV=<path>/<virtualenv>' from env!
function gitStatus {
    venv=""
    # strips off '/' and returns last element
    virtual_env=${VIRTUAL_ENV##*/}
    if [[ -n $virtual_env ]]
    then
        venv=$BCyan" ($virtual_env)"$Color_Off
    fi

    git_status=$(git status -bu --porcelain 2> /dev/null)
    if [ $? = 0 ]
    then
        #TODO: merge, rebase, conflict.

        #http://stackoverflow.com/questions/15791098/bash-remove-trailing-characters-until-dash-alphanumeric
        branch_name=`echo "${git_status%%.*}" | awk '/##/{print $2}'`
        git_untracked=""
        git_modified=""
        git_ahead=""
        git_behind=""
        git_clean=""
        tick=$'\xE2\x9C\x93'
        untracked=`echo "$git_status" | grep -c '?? ' | grep -v 0`
        modified=`echo "$git_status" |grep -c "M \|A " | grep -v 0`
        ahead=`echo "$git_status" | awk '/ahead/{gsub(/]|,/,"") ;print $4}'`
        behind=`echo "$git_status" | awk '/behind/{gsub(/]/,"") ;print $NF}'`
        status_lines=`echo "$git_status" | wc -w`
        if [[ -n $modified ]]
        then
            git_modified=$Red"m$modified"
            branch_name=$Red$branch_name
        fi
        if [[ -n $untracked ]]
        then
            git_untracked=$Cyan"u$untracked"
            branch_name=$Cyan$branch_name
        fi
        if [[ -n $ahead ]]
        then
            git_ahead=$Purple"a$ahead"
            branch_name=$Purple$branch_name
        fi
        if [[ -n $behind ]]
        then
            git_behind=$Blue"b$behind"
            branch_name=$Blue$branch_name
        fi
        if [[ status_lines -eq 2 ]]
        then
            git_clean=$Green$tick
            branch_name=$Green$branch_name
        fi

        git_prompt=" [$branch_name$Color_Off|$git_untracked$git_modified$git_ahead$git_behind$git_clean$Color_Off]"

        PS1="$PROMPT_START$venv$git_prompt$PROMPT_END"
    else
        PS1="$PROMPT_START$venv$PROMPT_END"
    fi
}

if [[ $system == 'Darwin' ]]
then
    PROMPT_START="$BWhite$Username $DateTime"
else
    PROMPT_START="$BGreen$Username@$Hostname $DateTime"
fi
PROMPT_END="$Yellow:$PathShort$Color_Off \$ "
# The PROMPT_COMMAND runs on each return key press.
PROMPT_COMMAND='gitStatus'
